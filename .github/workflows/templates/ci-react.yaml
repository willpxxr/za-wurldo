name: Continuous Integration (React)

on:
  workflow_call:
    inputs:
      path:
        required: true
        type: string
      isRelease:
        default: false
        type: boolean
        required: true
      nodeVersion:
        default: 17.3
        required: false
        type: string
    secrets:
      registryPassword:
        required: true

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build and Cache Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.nodeVersion }}
      - name: Determine Yarn Cache Directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Packages
        working-directory: ./${{ inputs.path }}
        run: |
          yarn install --frozen-lockfile
      - name: Build
        working-directory: ./${{ inputs.path }}
        run: |
          yarn build
  artifacts:
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Login To The Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.registryPassword }}
      - name: Extract Container Metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.path }}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}},enable=${{ inputs.isRelease }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ inputs.isRelease }}
      - name: Build And Push Container
        uses: docker/build-push-action@v2
        with:
          context: ./${{ inputs.path }}
          push: ${{ inputs.isRelease }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
