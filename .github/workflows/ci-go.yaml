name: Continuous Integration (Go)

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
  release:
    types:
      - created

env:
  GOLANG_VERSION: '1.17'
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build and Cache Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Restore Build Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-backend-${{ hashFiles('backend/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-backend-
      - name: Download Go Modules
        working-directory: ./backend
        run: |
          go mod download
      - name: Ensure Go Modules Consistency
        working-directory: ./backend
        run: |
          go mod verify
      - name: Build
        working-directory: ./backend/cmd
        run: |
          go build
  artifacts:
    needs:
      - build
    name: Build and Push Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Login To The Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Container Metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-backend
          flavor: |
            latest=auto
          tags: |
            type=sha,prefix={{branch}}-,enable=${{ !(github.event_name == 'release' && github.event.action == 'created') }}
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' && github.event.action == 'created' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' && github.event.action == 'created' }}
      - name: Build And Push Container
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
